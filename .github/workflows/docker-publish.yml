name: Docker Build and Release

on:
  push:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: qutora/qutora-api

jobs:
  build-and-release:
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[release]')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    outputs:
      new-version: ${{ steps.bump.outputs.new_version }}

    steps:
      - name: Checkout code and tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Fetch latest tag from Docker Hub
        id: get_tag
        continue-on-error: true
        run: |
          LATEST=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.IMAGE_NAME }}/tags/?page_size=100" \
            | jq -r '.results[].name' \
            | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' \
            | sort -V | tail -1)
          echo "LATEST=${LATEST:-v0.0.0}" >> $GITHUB_ENV

      - name: Determine bump level based on commit message
        id: detect
        run: |
          MSG="${{ github.event.head_commit.message }}"
          if [[ "$MSG" =~ \[major\] ]]; then echo "LEVEL=major"; \
          elif [[ "$MSG" =~ \[minor\] ]]; then echo "LEVEL=minor"; \
          else echo "LEVEL=patch"; fi >> $GITHUB_ENV

      - name: Bump semantic version
        id: bump
        uses: actions-ecosystem/action-bump-semver@v1
        with:
          current_version: ${{ env.LATEST }}
          level: ${{ env.LEVEL }}

      - name: Output the new version
        run: echo "Bumped from ${{ env.LATEST }} → ${{ steps.bump.outputs.new_version }}"

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Tag and push the release
        run: |
          git tag ${{ steps.bump.outputs.new_version }}
          git push origin refs/tags/${{ steps.bump.outputs.new_version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Strip v prefix from version
        id: version
        run: echo "CLEAN_VERSION=${NEW_VERSION#v}" >> $GITHUB_OUTPUT
        env:
          NEW_VERSION: ${{ steps.bump.outputs.new_version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.bump.outputs.new_version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=Qutora Document Management System
            org.opencontainers.image.version=${{ steps.bump.outputs.new_version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT
          build-args: |
            VERSION=${{ steps.version.outputs.CLEAN_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump.outputs.new_version }}
          name: "Release ${{ steps.bump.outputs.new_version }}"
          body: |
            ## Qutora API ${{ steps.bump.outputs.new_version }}
            
            Docker image: `docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.bump.outputs.new_version }}`
            
            ### Supported Platforms
            - linux/amd64
            - linux/arm64

  skip-notification:
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[release]')
    runs-on: ubuntu-latest
    steps:
      - name: No release detected
        run: echo "⏭️ No [release] tag found, skipping build-and-release."
